apiVersion: v1
kind: Service
metadata:
  name: bookings
  namespace: kong-air
spec:
  selector:
    app: bookings
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookings
  namespace: kong-air
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bookings
  template:
    metadata:
      labels:
        app: bookings
    spec:
      containers:
      - name: bookings
        image: docker.io/kongair/bookings:latest # Replace with your Docker image
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
---
kind: HTTPRoute
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: bookings
  namespace: kong-air
spec:
  parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: kong
      namespace: kong
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /bookings
      backendRefs:
        - name: bookings
          port: 80